//app.js
App({
  onLaunch: function () {
    this.conf = require('conf/common.js');

    //调用API从本地缓存中获取数据
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs);

    wx.setStorageSync('SESSION_ID','');
    wx.setStorageSync('LOGIN_SESSION_ID','');    

    var that = this;

    //初始化存储SESSIONID
    wx.request({
      url: that.conf.url.initSessionId,
      data: {},
      method: 'GET', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
      success: function(res){
        if(res.data.code=='ok')
        {
          wx.setStorageSync('SESSION_ID',res.data.data);
        }        
      },
      fail: function(res) {
        // fail
      },
      complete: function(res) {
        // complete
      }
    })

    

  },
  getSessionHeader:function(normal)
  {

    var sessionId = wx.getStorageSync('LOGIN_SESSION_ID');//本地取存储的sessionID
    if (normal)
    {
        sessionId = wx.getStorageSync('SESSION_ID');
    }

    if (sessionId) 
    {
        var header = { 'content-type': 'application/x-www-form-urlencoded', 'Cookie': this.conf.serverSsId+'=' + sessionId }  
    } 
    else
    {  
        var header = { 'content-type': 'application/x-www-form-urlencoded' }  
    } 

    return header;
  },
  conf:{},
  getUserInfo:function(cb){
    var that = this
    if(this.globalData.userInfo){
      typeof cb == "function" && cb(this.globalData.userInfo)
    }else{
      //调用登录接口
      wx.login({
        success: function () {
          wx.getUserInfo({
            success: function (res) {
              that.globalData.userInfo = res.userInfo
              typeof cb == "function" && cb(that.globalData.userInfo)
            }
          })
        }
      })
    }
  },
  globalData:{
    userInfo:null,
    loginCode:null
  },
  //登录状态检测
  checkLocalLogin:function(params)
  {
    if(wx.getStorageSync('LOGIN_SESSION_ID'))
    {
      typeof params.success == "function" && params.success();
      return;
    }

    typeof params.fail == "function" && params.fail();
    return;
  },
  /*
  * 公共登录方法
  *
  * @date 2017-5-4
  * @author YuanFei
  * @param {Object} params 参数对象
  * @param {Function} success 登录成功回调-params对象成员
  * @param {Function} fail 登录失败回调-params对象成员
  *
  */
  login:function(params){
    var that = this;

      /*
      根据现有官方文档内容，此方法基本无用，暂时注释
      wx.checkSession({
      success: function(){
        //session 未过期，并且在本生命周期一直有效
      },
      fail: function(){
      }
      });*/

      wx.setStorageSync('LOGIN_SESSION_ID','');
      wx.login({
        success: function (loginRes) {
          var code = loginRes.code;
          that.globalData.loginCode = code;

          wx.getUserInfo({
            success: function (userInfoRes) {
              that.globalData.userInfo = userInfoRes.userInfo;

              var header = that.getSessionHeader(true);
              //发送登录请求到服务器
              wx.request({
                url: that.conf.url.login,
                data: {code:code,encryptedData:userInfoRes.encryptedData,iv:userInfoRes.iv},
                method: 'POST', // OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT
                header: header, // 设置请求的 header
                success: function(res)
                {
                  if(res.code == 'ok')
                  {
                    console.log('login OK SESSIONID:'+res.data);
                    wx.setStorageSync('LOGIN_SESSION_ID',res.data);
                    typeof params.success == "function" && params.success();
                    return;
                  }
                  else
                  {
                    console.log('login OK Fail:'+res.data);
                    typeof params.fail == "function" && params.fail();
                    return;
                  }
                },
                fail: function(res) {
                  // fail
                  typeof params.fail == "function" && params.fail();
                  return;
                },
                complete: function(res) {
                  // complete
                }
              });
            }
          });
        }
      });

  },
  sessionRequest:function(params)
  {
    if(params.header)
    {
      params.header = Object.assign(params.header,this.getSessionHeader());
    }
    else
    {
      params.header = this.getSessionHeader();
    }
    
    wx.request(params);
  }
})