function formatTime(date) {
  var year = date.getFullYear()
  var month = date.getMonth() + 1
  var day = date.getDate()

  var hour = date.getHours()
  var minute = date.getMinutes()
  var second = date.getSeconds()


  return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':')
}

function formatNumber(n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

/*
* 格式化日期
*
* @date 2017-5-8
* @author YuanFei
* @param {String} format 日期格式 例：'Y.m.d H:i:s'
* @param {Int} timestamp 时间戳
* @return {String}
*/
function dateFormat(format, timestamp) {
    var a, jsdate = ((timestamp) ? new Date(timestamp * 1000) : new Date());
    var pad = function(n, c) {
        if ((n = n + "").length < c) {
            return new Array(++c - n.length).join("0") + n;
        } else {
            return n;
        }
    };
    var txt_weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
    var txt_ordin = { 1: "st", 2: "nd", 3: "rd", 21: "st", 22: "nd", 23: "rd", 31: "st" };
    var txt_months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    var f = {
        // Day
        d: function() {
            return pad(f.j(), 2) },
        D: function() {
            return f.l().substr(0, 3) },
        j: function() {
            return jsdate.getDate() },
        l: function() {
            return txt_weekdays[f.w()] },
        N: function() {
            return f.w() + 1 },
        S: function() {
            return txt_ordin[f.j()] ? txt_ordin[f.j()] : 'th' },
        w: function() {
            return jsdate.getDay() },
        z: function() {
            return (jsdate - new Date(jsdate.getFullYear() + "/1/1")) / 864e5 >> 0 },
        // Week
        W: function() {
            var a = f.z(),
                b = 364 + f.L() - a;
            var nd2, nd = (new Date(jsdate.getFullYear() + "/1/1").getDay() || 7) - 1;
            if (b <= 2 && ((jsdate.getDay() || 7) - 1) <= 2 - b) {
                return 1;
            } else {
                if (a <= 2 && nd >= 4 && a >= (6 - nd)) {
                    nd2 = new Date(jsdate.getFullYear() - 1 + "/12/31");
                    return date("W", Math.round(nd2.getTime() / 1000));
                } else {
                    return (1 + (nd <= 3 ? ((a + nd) / 7) : (a - (7 - nd)) / 7) >> 0);
                }
            }
        },
        // Month
        F: function() {
            return txt_months[f.n()] },
        m: function() {
            return pad(f.n(), 2) },
        M: function() {
            return f.F().substr(0, 3) },
        n: function() {
            return jsdate.getMonth() + 1 },
        t: function() {
            var n;
            if ((n = jsdate.getMonth() + 1) == 2) {
                return 28 + f.L();
            } else {
                if (n & 1 && n < 8 || !(n & 1) && n > 7) {
                    return 31;
                } else {
                    return 30;
                }
            }
        },
        // Year
        L: function() {
            var y = f.Y();
            return (!(y & 3) && (y % 1e2 || !(y % 4e2))) ? 1 : 0 },
        //o not supported yet
        Y: function() {
            return jsdate.getFullYear() },
        y: function() {
            return (jsdate.getFullYear() + "").slice(2) },
        // Time
        a: function() {
            return jsdate.getHours() > 11 ? "pm" : "am" },
        A: function() {
            return f.a().toUpperCase() },
        B: function() {
            // peter paul koch:
            var off = (jsdate.getTimezoneOffset() + 60) * 60;
            var theSeconds = (jsdate.getHours() * 3600) + (jsdate.getMinutes() * 60) + jsdate.getSeconds() + off;
            var beat = Math.floor(theSeconds / 86.4);
            if (beat > 1000) beat -= 1000;
            if (beat < 0) beat += 1000;
            if ((String(beat)).length == 1) beat = "00" + beat;
            if ((String(beat)).length == 2) beat = "0" + beat;
            return beat;
        },
        g: function() {
            return jsdate.getHours() % 12 || 12 },
        G: function() {
            return jsdate.getHours() },
        h: function() {
            return pad(f.g(), 2) },
        H: function() {
            return pad(jsdate.getHours(), 2) },
        i: function() {
            return pad(jsdate.getMinutes(), 2) },
        s: function() {
            return pad(jsdate.getSeconds(), 2) },
        //u not supported yet
        // Timezone
        //e not supported yet
        //I not supported yet
        O: function() {
            var t = pad(Math.abs(jsdate.getTimezoneOffset() / 60 * 100), 4);
            if (jsdate.getTimezoneOffset() > 0) t = "-" + t;
            else t = "+" + t;
            return t;
        },
        P: function() {
            var O = f.O();
            return (O.substr(0, 3) + ":" + O.substr(3, 2)) },
        //T not supported yet
        //Z not supported yet
        // Full Date/Time
        c: function() {
            return f.Y() + "-" + f.m() + "-" + f.d() + "T" + f.h() + ":" + f.i() + ":" + f.s() + f.P() },
        //r not supported yet
        U: function() {
            return Math.round(jsdate.getTime() / 1000) }
    };
    return format.replace(/[\\]?([a-zA-Z])/g, function(t, s) {
        var ret = '';
        if (t != s) {
            // escaped
            ret = s;
        } else if (f[s]) {
            // a date function exists
            ret = f[s]();
        } else {
            // nothing special
            ret = s;
        }
        return ret;
    });
}

/*
* 通过时间戳获取星期
*
* @date 2017-5-4
* @author YuanFei
* @param {Int} timestamp key
* @return {Mix}
*/
function getWeek(timestamp) 
{
  var cnWeek = ['周日','周一','周二','周三','周四','周五','周六'],
      date = new Date(timestamp*1000),
      day = date.getDay();
  return cnWeek[day];
}

/*
* 获取配置项
*
* @date 2017-5-4
* @author YuanFei
* @param {String} confKey key
* @return {Mix}
*/
function getConfig(confKey) 
{
  try
  {
    return require('../conf/'+confKey+'.js');
  }
  catch(e)
  {
    console.log(e)
  }
}

/*
* 获取系统高度rpx单位
*
* @author wuxiaoob
* @return {rpx}
*/
function rpxHeight() {
  let rpxHeight = 1334;
  wx.getSystemInfo({
    success: function (res) {
      rpxHeight = (750 / res.screenWidth) * res.windowHeight;
    },
  })
  return rpxHeight;
}
/*
* px2rpx
*
* @author wuxiaoob
*/
function px2rpx(px) {
  let rpx = 0;
  wx.getSystemInfo({
    success: function (res) {
      rpx = (750 / res.screenWidth) * px;
    },
  })
  return rpx;
}
/*
* rpx2px
*
* @author wuxiaoob
*/
function rpx2px(rpx) {
  let px = 0;
  wx.getSystemInfo({
    success: function (res) {
      px = (res.screenWidth / 750) * rpx;
    },
  })
  return px;
}
/*
* 空对象判断
*
* @author wuxiaoob
*/
function isEmptyObject( obj) {
  for (var name in obj) {
    return false;
  }
  return true;
} 

/*
* 获取微信支付接口参数配置对象 --暂未使用，接口参数目前通过后台加密生成
*
* @date 2017-6-13
* @author YuanFei
* @param {String} package 支付接口返回的数据 例：prepay_id=wx2017033010242291fcfe0db70013231072
* @param {String} key 商户号key 例：qazwsxedcrfvtgbyhnujmikolp111111
* @return {Object}
*/
function getWxPaymentConfig(packageStr,key) 
{
  var config           = getConfig('common'),
      md5              = require('md5.min.js'),
      timeStamp        = parseInt(+new Date() / 1000),
      nonceStr         = md5(Math.random()),      
      paySignParamsStr = 'appId=' + config.appId + 
                         '&nonceStr=' + nonceStr + 
                         '&package=' + packageStr+
                         '&signType=MD5' + 
                         '&timeStamp=' + timeStamp +
                         '&key='      + key ,
      paySign          = md5(paySignParamsStr);

  var paymentConif = {
        timeStamp: timeStamp,
        nonceStr: nonceStr,
        package: packageStr,
        signType: 'MD5',
        paySign: paySign,
        success:function(res){
        },
        fail:function(res){
        },
        complete:function(res){
        },
    }

  return paymentConif;
}

/*
* 获取公共的表单检验正则
*
* @date 2017-6-22
* @author YuanFei
* @param {String} type 检验表单项类型
* @return {Object}
*/
function getValidateReg(type) 
{
  switch(type)
  {
    case 'mobile':
      return /^1[\d]{10}$/;
    break;
  }
}


/*
* 发起微信支付
*
* @date 2017-6-22
* @author YuanFei
* @param {String} orderSn 订单号
* @param {String} success 支付成功回调
* @param {String} fail 支付失败回调
* @return {Object}
*/
function startWxPay(orderSn,success,fail) 
{
  var app = getApp();
  if (!orderSn)
  {
    return false;
  }

  var postData = {
    orderSn: orderSn
  };
  var localConfig = app.globalData.orderSnPayConfMap[orderSn];
  //如果本地有缓存支付配置则直接调用本地的，否则发网络请求
  if (localConfig)
  {
    console.log('本地支付配置缓存')
    //然后调用微信支付接口
    var paymentConif = {
      timeStamp: localConfig.timeStamp,
      nonceStr: localConfig.nonceStr,
      package: localConfig.package,
      signType: 'MD5',
      paySign: localConfig.paySign,
      success: function (res) {
        typeof success == "function" && success(res);
      },
      fail: function (res) {
        typeof fail == "function" && fail(res);
      },
      complete: function (res) {

      },
    };

    wx.requestPayment(paymentConif);
  }
  else
  {
    console.log('网络支付配置缓存')
    app.sessionRequest(
      {
        url: app.conf.url.pay,
        data: postData,
        method: 'POST',
        header: {
          'content-type': 'application/json'
        },
        success: function (res) {
          if (res.data.code == 'ok' && res.data.data.param)
          {
            var params = res.data.data.param;
            params.timeStamp = params.timeStamp+''; // 时间戳配置项必须是字符串类型
            //然后调用微信支付接口
            var paymentConif = {
              timeStamp: params.timeStamp,
              nonceStr: params.nonceStr,
              package: params.package,
              signType: 'MD5',
              paySign: params.paySign,
              success: function (res) {
                typeof success == "function" && success(res);
              },
              fail: function (res) {
                typeof fail == "function" && fail(res);
              },
              complete: function (res) {

              },
            };

            app.globalData.orderSnPayConfMap[orderSn] = params;//将支付配置缓存到本地

            wx.requestPayment(paymentConif);

          }
          else if (res.data.code == "needLogin")
          {
            app.login({
              success: function () {
                startWxPay(orderSn, success, fail);
              },
              fail: function () {

              }
            });
          }
          else
          {
            var failMsg = '系统繁忙，请稍后再试！';
            if (res.data.msg) {
              failMsg = res.data.msg;
            }

            wx.showToast({
              title: failMsg,
              showCancel: false,
              content: failMsg,
              success: function (res) {

              }
            });

            typeof fail == "function" && fail(res);
          }
        },
        complete: function (res) {
          console.log('pay request complete',res);
        }
      }
    );
  }


}


/*
* 倒计时格式化输出 hh:mm:ss
* param   总毫秒
* @author wuxiaoob
*/
function formatCountDown(micro_second) {
  // 秒数
  var second = Math.floor(micro_second / 1000);
  // 小时位
  var hour = fill_zero_prefix(Math.floor(second / 3600));
  // 分钟位
  var min = fill_zero_prefix(Math.floor((second - hour * 3600) / 60));
  // 秒位
  var sec = fill_zero_prefix((second - hour * 3600 - min * 60));// equal to => var sec = second % 60;
  // 毫秒位，保留2位
  var micro_sec = fill_zero_prefix(Math.floor((micro_second % 1000) / 10));
  return hour + ":" + min + ":" + sec;
}
// 位数不足补零
function fill_zero_prefix(num) {
  return num < 10 ? "0" + num : num
}

/*
* 错误页
* param   tipText 提示文本
*         actionText 按钮文本
*         routeUrl 按钮跳转绝对地址
* @author wuxiaoob
*/
function error(tipText, actionText, routeUrl ){
  tipText    = tipText ? tipText : '出错了';
  actionText = actionText ? actionText : '返回首页';
  routeUrl   = routeUrl ? routeUrl : '/pages/index/index';
  wx.reLaunch({
    url: '/pages/error/index?tipText=' + tipText + '&actionText=' + actionText + '&routeUrl=' + routeUrl,
  })
}

/*
* 对象长度
*
* @author wuxiaoob
*/
function objectLength(obj) {
  let length = 0;
  for (var i in obj) {
    length++;
  }
  return length;
} 

module.exports = {
  formatTime         : formatTime,
  dateFormat         : dateFormat,
  getWeek            : getWeek,
  getConfig          : getConfig,
  rpxHeight          : rpxHeight,
  px2rpx             : px2rpx,
  rpx2px             : rpx2px,
  startWxPay         : startWxPay,
  isEmptyObject      : isEmptyObject,
  formatCountDown    : formatCountDown,
  error              : error,
  objectLength       : objectLength,
  getValidateReg     : getValidateReg,
}

